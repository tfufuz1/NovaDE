#version 450

layout (local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

layout (set = 0, binding = 0) uniform sampler2D inputImageSampler; // From COMBINED_IMAGE_SAMPLER
layout (set = 0, binding = 1, rgba8) uniform writeonly image2D outputImage;

void main() {
    ivec2 storeCoord = ivec2(gl_GlobalInvocationID.xy);
    vec2 imageDims = vec2(imageSize(outputImage)); // Get dimensions of output image

    // Check bounds to avoid writing out of image
    if (storeCoord.x < imageDims.x && storeCoord.y < imageDims.y) {
        // Normalized coordinates for sampling input texture
        vec2 sampleCoord = vec2(gl_GlobalInvocationID.xy + vec2(0.5)) / imageDims;
        vec4 color = texture(inputImageSampler, sampleCoord);

        // Simple effect: Invert colors
        vec4 processedColor = vec4(1.0 - color.rgb, color.a);

        imageStore(outputImage, storeCoord, processedColor);
    }
}
