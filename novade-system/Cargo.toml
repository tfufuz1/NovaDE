[package]
name = "novade-system"
version = "0.1.0"
edition = "2021"

[dependencies]
novade-core = { path = "../novade-core" }
novade-domain = { path = "../novade-domain" }
async-trait = "0.1.68"
tokio = { version = "1.45.1", features = ["full"] } # Task requirement: Tokio 1.45.1
# Smithay and Wayland versions
smithay = { version = "0.7.0", default-features = false, features = [
    "backend_libinput",     # For libinput backend
    "backend_udev",         # For udev backend and KMS/DRM
    "backend_winit",        # For running in a window (testing/development)
    "renderer_gl",          # For OpenGL ES 2.0 renderer
    # "renderer_vulkan",      # For Vulkan renderer (requires 'ash' feature in smithay if it exists, or manual ash integration)
    # "renderer_software",    # Fallback or testing renderer
    "wayland-server",       # Core Wayland server functionalities
    "xwayland",             # For XWayland support
    "desktop",              # For desktop components like Space, Window, PopupManager, LayerSurface
    # "seat_management",      # For managing seats, keyboard, pointer, touch
    "backend_drm",
    "backend_egl",
    "renderer_gl",
    "renderer_multi",
    "use_system_lib",
    "backend_session",
    "backend_session_libseat",
    "backend_udev",
    "xwayland",
    "xkbcommon",
    "renderer_pixman",
    # "wlr_layer_shell",    # Smithay 0.30.0 might not have a direct feature; handled by wayland-protocols
    "xdg_decoration",       # For zxdg_decoration_manager_v1
    # "xdg_activation",       # For xdg_activation_v1
    # "presentation_time",    # For wp_presentation_time
    # IME and text input protocols might need specific features or direct use of wayland-protocols
    # "viewporter",           # For wp_viewport_v1
    # "xdg_output_management", # Usually part of output_management or handled by wayland-protocols for zxdg_output_manager_v1
    # "single_pixel_buffer",  # For wp_single_pixel_buffer_v1
    # "relative_pointer"     # For wp_relative_pointer_manager_v1
    # "foreign_toplevel_management", # May need wayland-protocols for wlr_foreign_toplevel_management_unstable_v1
    # "idle_notify",        # May need wayland-protocols for idle_notify_unstable_v1
] }
wayland-server = { version = "0.31" } # Match Smithay's version
wayland-protocols = { version = "0.32", features = [
    "server",
    "unstable", # For many of the specified unstable protocols
    "staging",  # For some staging protocols
    "xdg-shell",          # Explicitly enable xdg-shell server parts
    "wlr-protocols",      # For wlr-layer-shell, foreign-toplevel, etc.
    # Add specific protocol features if needed, e.g., "input_method_unstable_v2", "text_input_unstable_v3"
    # "fractional_scale_v1", "viewporter_v1", "presentation_time", etc.
    # Check wayland-protocols documentation for exact feature names for each protocol.
    # Smithay often re-exports these, but direct dependency can be clearer.
    "xdg-decoration",
    "linux-dmabuf-v1",
    "input-method-unstable-v2",
    "text-input-unstable-v3",
    "fractional-scale-v1",
    "xdg-output-unstable-v1", # For zxdg_output_manager_v1
    # "single-pixel-buffer-v1",
    # "relative-pointer-unstable-v1",
    "pointer-constraints-unstable-v1",
    "foreign-toplevel-management-unstable-v1",
    "idle-notify-unstable-v1",
] }

calloop = { version = "0.12.0", features = ["executor"] } # Task requirement: Calloop 0.12.0. `executor` for async tasks.
glib = { version = "0.19.0" } # For MainContext::spawn_local (check latest compatible version)

# General purpose
zbus = "3" # Already present, version check if needed
serde = { version = "1.0", features = ["derive"] } # Already present
serde_json = "1.0" # Already present
toml = "0.8" # Already present
tracing = "0.1" # Already present
tracing-subscriber = { version = "0.3", features = ["fmt"] } # Already present
thiserror = "1.0" # Already present
libc = "0.2" # Already present
log = "0.4" # Already present
once_cell = "1.10" # Already present
anyhow = "1.0" # Already present
futures-core = "0.3" # Already present
futures-util = "0.3" # Already present
uuid = { version = "1.4.1", features = ["v4"] } # Already present

# Input
input = { version = "0.8.0" } # Smithay's input crate (libinput wrapper)
udev = { version = "0.8.0" } # For udev backend (often used with libinput)
xkbcommon = { version = "0.7.0", features = ["default", "wayland"] } # Already present, ensure version compatibility

# Rendering
ash = { version = "0.37", features = ["linked", "debug"] } # For Vulkan. 'linked' for loader, 'debug' for validation layers.
ash-window = "0.12" # For Wayland surface creation with Ash (check compatibility with Smithay/Wayland versions)
# Smithay's GLES renderer might depend on `glow` or similar, check Smithay's renderer_gl feature dependencies.
# If using Smithay's GLES renderer, it might pull in EGL bindings.
# `drm` and `gbm` are often needed for direct KMS/DRM backend with GLES.
drm = "0.11.0" # Already present, for direct rendering mode (KMS)
gbm = "0.11.0" # Already present, for buffer management with DRM

# Utilities for Wayland/Smithay
nix = { version = "0.27.1", features = ["fs", "mount", "socket", "process", "ioctl", "uio"] } # Existing, ensure features are sufficient
tempfile = "3.8" # Already present
byteorder = "1.4" # Already present
memmap2 = "0.9" # Already present
mio = { version = "0.8", features = ["os-ext", "net"] } # Already present

# System health and other utilities (already present, versions checked)
psutil = "3.2"
nvml-wrapper = "0.7"
prometheus = { version = "0.13", features = ["process"] }
warp = "0.3"
memoffset = "0.9"
glam = "0.24"
sd-journal = "0.1.0"
async-stream = "0.3"
signal-hook = "0.3"
polling = "3.4"
gpu-allocator = { version = "0.22", features = ["ash"] }
raw-window-handle = "0.5" # Smithay 0.30.0 uses raw-window-handle 0.5
vk-mem = "0.3.0"


[features]
default = ["prometheus_exporter", "backend_libinput", "renderer_gl"] # Sensible defaults
prometheus_exporter = [] # Already present

# Backend features (can be selected at compile time by main application)
backend_libinput = [] # Enables libinput backend for input
backend_udev = []     # Enables udev backend for input and KMS/DRM
backend_winit = []    # Enables winit backend for testing in a window

# Renderer features
renderer_gl = []      # Enables OpenGL ES 2.0 renderer
renderer_vulkan = []  # Enables Vulkan renderer
renderer_software = [] # Enables software renderer (for testing or fallback)

# XWayland feature
with_xwayland = []    # Enables XWayland support

[[example]]
name = "vulkan_renderer_test"
path = "examples/vulkan_renderer_test.rs"

[[example]]
name = "run_echo_service"
path = "examples/run_echo_service.rs"

[[example]]
name = "test_upower_client"
path = "examples/test_upower_client.rs"

[[example]]
name = "demo_core_system_client"
path = "examples/demo_core_system_client.rs"
